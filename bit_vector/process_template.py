# Copyright (c) 2018 Tuukka Norri
# This code is licensed under MIT license (see LICENSE for details).

import argparse
from string import Template
import sys


if __name__ == "__main__":
	# Parse the command line arguments.
	parser = argparse.ArgumentParser(description = "Preprocess a Cython file.")
	parser.add_argument('--template', type = argparse.FileType('r'))
	parser.add_argument('--variables', type = argparse.FileType('r'))
	args = parser.parse_args()
	
	keys = None
	values = None
	first_line = True
	template = Template(args.template.read())
	sys.stdout.write("# This file is automatically generated from %s and %s.\n\n" % (args.template.name, args.variables.name))
	for line in args.variables:
		line = line.rstrip("\n")
		
		if line.startswith("#"):
			continue
		
		if 0 == len(line):
			continue
		
		if first_line:
			keys = line.split("\t")
			first_line = False
			continue
		
		values = line.split("\t")
		mapping = dict(zip(keys, values))
		
		result = template.substitute(mapping)
		
		sys.stdout.write("# Mapping:\n")
		for key, val in mapping.items():
			sys.stdout.write("#\t%s:\t%s\n" % (key, val))
		
		sys.stdout.write("\n")
		sys.stdout.write(result)
		sys.stdout.write("\n")
